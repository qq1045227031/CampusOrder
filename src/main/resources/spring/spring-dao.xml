<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">
    <!--关联数据库配置文件-->
<!--    <context:property-placeholder location="classpath:jdbc.properties"/>-->
    <bean class="com.imooc.o2o.util.EncryptPropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:redis.properties</value>
            </list>
        </property>
        <property name="fileEncoding" value="UTF-8"/>
    </bean>
    <!--连接池 dbcp:半自动化，不能自动连接
    c3p0：自动化操作(自动化加载配置，并且可以自动设置到对象中!要先导入包)
    durid 和hikari
  -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--        配置的是c3p0的数据源-->
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- c3p0连接池的私有属性 -->
        <property name="maxPoolSize" value="30"/>
        <property name="minPoolSize" value="10"/>
        <!-- 关闭连接后不自动commit -->
        <property name="autoCommitOnClose" value="false"/>
        <!-- 获取连接超时时间 -->
        <property name="checkoutTimeout" value="10000"/>
        <!-- 当获取连接失败重试次数 -->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>
    <!--    3.sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--       将上面的datasource传入-->
        <property name="dataSource" ref="dataSource"/>
        <!-- 注意！   绑定Mybaits的配置文件,但是mybatis-config.xml拿不到bean所有用总的配置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
<!--        扫描包entity然后使用别名，其实就是别名的启动-->
        <property name="typeAliasesPackage" value="com.imooc.o2o.entity"/>
<!--        扫描sql配置文件mapper需要的xml文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <!--    4.配置dao接口扫描包动态实现了dao接口可以注册到spring，也就是上面的dao层不用再创建一个实体类mapperImpl然后在这注册了-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--     注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--        要扫描的dao包-->
        <property name="basePackage" value="com.imooc.o2o.dao"/>
    </bean>
</beans>